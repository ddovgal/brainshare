/*
 * This file is generated by jOOQ.
*/
package ua.ddovgal.brainshareApi.jooq;


import org.jooq.Configuration;
import org.jooq.Field;
import ua.ddovgal.brainshareApi.jooq.routines.*;

import javax.annotation.Generated;


/**
 * Convenience access to all stored procedures and functions in brainshare_dev
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Routines {

    /**
     * Call <code>brainshare_dev.add_commentary_mark</code>
     */
    public static void addCommentaryMark(Configuration configuration, Long commentaryIdParam, Long setterUserIdParam, Byte isUpMarkParam) {
        AddCommentaryMark p = new AddCommentaryMark();
        p.setCommentaryIdParam(commentaryIdParam);
        p.setSetterUserIdParam(setterUserIdParam);
        p.setIsUpMarkParam(isUpMarkParam);

        p.execute(configuration);
    }

    /**
     * Call <code>brainshare_dev.add_material_mark</code>
     */
    public static void addMaterialMark(Configuration configuration, Long materialIdParam, Long setterUserIdParam, Byte isUpMarkParam) {
        AddMaterialMark p = new AddMaterialMark();
        p.setMaterialIdParam(materialIdParam);
        p.setSetterUserIdParam(setterUserIdParam);
        p.setIsUpMarkParam(isUpMarkParam);

        p.execute(configuration);
    }

    /**
     * Call <code>brainshare_dev.material_state_id_for</code>
     */
    public static Integer materialStateIdFor(Configuration configuration, Integer materialRatio) {
        MaterialStateIdFor f = new MaterialStateIdFor();
        f.setMaterialRatio(materialRatio);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>brainshare_dev.material_state_id_for</code> as a field.
     */
    public static Field<Integer> materialStateIdFor(Integer materialRatio) {
        MaterialStateIdFor f = new MaterialStateIdFor();
        f.setMaterialRatio(materialRatio);

        return f.asField();
    }

    /**
     * Get <code>brainshare_dev.material_state_id_for</code> as a field.
     */
    public static Field<Integer> materialStateIdFor(Field<Integer> materialRatio) {
        MaterialStateIdFor f = new MaterialStateIdFor();
        f.setMaterialRatio(materialRatio);

        return f.asField();
    }

    /**
     * Call <code>brainshare_dev.recount_approval_value</code>
     */
    public static void recountApprovalValue(Configuration configuration, Long materialId) {
        RecountApprovalValue p = new RecountApprovalValue();
        p.setMaterialId(materialId);

        p.execute(configuration);
    }

    /**
     * Call <code>brainshare_dev.user_status_id_for</code>
     */
    public static Integer userStatusIdFor(Configuration configuration, Integer userRatio) {
        UserStatusIdFor f = new UserStatusIdFor();
        f.setUserRatio(userRatio);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>brainshare_dev.user_status_id_for</code> as a field.
     */
    public static Field<Integer> userStatusIdFor(Integer userRatio) {
        UserStatusIdFor f = new UserStatusIdFor();
        f.setUserRatio(userRatio);

        return f.asField();
    }

    /**
     * Get <code>brainshare_dev.user_status_id_for</code> as a field.
     */
    public static Field<Integer> userStatusIdFor(Field<Integer> userRatio) {
        UserStatusIdFor f = new UserStatusIdFor();
        f.setUserRatio(userRatio);

        return f.asField();
    }
}
