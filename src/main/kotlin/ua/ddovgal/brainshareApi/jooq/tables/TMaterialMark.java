/*
 * This file is generated by jOOQ.
*/
package ua.ddovgal.brainshareApi.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import ua.ddovgal.brainshareApi.jooq.BrainshareDev;
import ua.ddovgal.brainshareApi.jooq.Keys;
import ua.ddovgal.brainshareApi.jooq.tables.records.RMaterialMarkRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TMaterialMark extends TableImpl<RMaterialMarkRecord> {

    /**
     * The reference instance of <code>brainshare_dev.material_mark</code>
     */
    public static final TMaterialMark MATERIAL_MARK = new TMaterialMark();
    private static final long serialVersionUID = -436790526;
    /**
     * The column <code>brainshare_dev.material_mark.material_id</code>.
     */
    public final TableField<RMaterialMarkRecord, ULong> MATERIAL_ID = createField("material_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material_mark.setter_user_id</code>.
     */
    public final TableField<RMaterialMarkRecord, ULong> SETTER_USER_ID = createField("setter_user_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");
    /**
     * The column <code>brainshare_dev.material_mark.is_up_mark</code>.
     */
    public final TableField<RMaterialMarkRecord, Byte> IS_UP_MARK = createField("is_up_mark", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>brainshare_dev.material_mark</code> table reference
     */
    public TMaterialMark() {
        this("material_mark", null);
    }

    /**
     * Create an aliased <code>brainshare_dev.material_mark</code> table reference
     */
    public TMaterialMark(String alias) {
        this(alias, MATERIAL_MARK);
    }

    private TMaterialMark(String alias, Table<RMaterialMarkRecord> aliased) {
        this(alias, aliased, null);
    }

    private TMaterialMark(String alias, Table<RMaterialMarkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RMaterialMarkRecord> getRecordType() {
        return RMaterialMarkRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BrainshareDev.BRAINSHARE_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RMaterialMarkRecord> getPrimaryKey() {
        return Keys.KEY_MATERIAL_MARK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RMaterialMarkRecord>> getKeys() {
        return Arrays.<UniqueKey<RMaterialMarkRecord>>asList(Keys.KEY_MATERIAL_MARK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RMaterialMarkRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RMaterialMarkRecord, ?>>asList(Keys.FK_MATERIAL_MARK_MATERIAL_ID, Keys.FK_MATERIAL_MARK_SETTER_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TMaterialMark as(String alias) {
        return new TMaterialMark(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TMaterialMark rename(String name) {
        return new TMaterialMark(name, null);
    }
}
