/*
 * This file is generated by jOOQ.
*/
package ua.ddovgal.brainshareApi.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import ua.ddovgal.brainshareApi.jooq.BrainshareDev;
import ua.ddovgal.brainshareApi.jooq.Keys;
import ua.ddovgal.brainshareApi.jooq.tables.records.RMaterialViewRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TMaterialView extends TableImpl<RMaterialViewRecord> {

    /**
     * The reference instance of <code>brainshare_dev.material_view</code>
     */
    public static final TMaterialView MATERIAL_VIEW = new TMaterialView();
    private static final long serialVersionUID = 1962751254;
    /**
     * The column <code>brainshare_dev.material_view.viewer_user_id</code>.
     */
    public final TableField<RMaterialViewRecord, ULong> VIEWER_USER_ID = createField("viewer_user_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");
    /**
     * The column <code>brainshare_dev.material_view.material_id</code>.
     */
    public final TableField<RMaterialViewRecord, ULong> MATERIAL_ID = createField("material_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>brainshare_dev.material_view</code> table reference
     */
    public TMaterialView() {
        this("material_view", null);
    }

    /**
     * Create an aliased <code>brainshare_dev.material_view</code> table reference
     */
    public TMaterialView(String alias) {
        this(alias, MATERIAL_VIEW);
    }

    private TMaterialView(String alias, Table<RMaterialViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private TMaterialView(String alias, Table<RMaterialViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RMaterialViewRecord> getRecordType() {
        return RMaterialViewRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BrainshareDev.BRAINSHARE_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RMaterialViewRecord> getPrimaryKey() {
        return Keys.KEY_MATERIAL_VIEW_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RMaterialViewRecord>> getKeys() {
        return Arrays.<UniqueKey<RMaterialViewRecord>>asList(Keys.KEY_MATERIAL_VIEW_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RMaterialViewRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RMaterialViewRecord, ?>>asList(Keys.FK_MATERIAL_VIEW_VIEWER_USER_ID, Keys.FK_MATERIAL_VIEW_MATERIAL_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TMaterialView as(String alias) {
        return new TMaterialView(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TMaterialView rename(String name) {
        return new TMaterialView(name, null);
    }
}
