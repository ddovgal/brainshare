/*
 * This file is generated by jOOQ.
*/
package ua.ddovgal.brainshareApi.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;
import ua.ddovgal.brainshareApi.jooq.BrainshareDev;
import ua.ddovgal.brainshareApi.jooq.Keys;
import ua.ddovgal.brainshareApi.jooq.tables.records.RMaterialRecord;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TMaterial extends TableImpl<RMaterialRecord> {

    /**
     * The reference instance of <code>brainshare_dev.material</code>
     */
    public static final TMaterial MATERIAL = new TMaterial();
    private static final long serialVersionUID = -70773624;
    /**
     * The column <code>brainshare_dev.material.id</code>.
     */
    public final TableField<RMaterialRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.title</code>.
     */
    public final TableField<RMaterialRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.author_user_id</code>.
     */
    public final TableField<RMaterialRecord, ULong> AUTHOR_USER_ID = createField("author_user_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");
    /**
     * The column <code>brainshare_dev.material.ratio</code>.
     */
    public final TableField<RMaterialRecord, Integer> RATIO = createField("ratio", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.has_low_priority</code>.
     */
    public final TableField<RMaterialRecord, Byte> HAS_LOW_PRIORITY = createField("has_low_priority", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.positive_mark_count</code>.
     */
    public final TableField<RMaterialRecord, UInteger> POSITIVE_MARK_COUNT = createField("positive_mark_count", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.negative_mark_count</code>.
     */
    public final TableField<RMaterialRecord, UInteger> NEGATIVE_MARK_COUNT = createField("negative_mark_count", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.state_id</code>.
     */
    public final TableField<RMaterialRecord, UInteger> STATE_ID = createField("state_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.approval_value</code>.
     */
    public final TableField<RMaterialRecord, UInteger> APPROVAL_VALUE = createField("approval_value", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.creation_datetime</code>.
     */
    public final TableField<RMaterialRecord, Timestamp> CREATION_DATETIME = createField("creation_datetime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.format_id</code>.
     */
    public final TableField<RMaterialRecord, UInteger> FORMAT_ID = createField("format_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.course_id</code>.
     */
    public final TableField<RMaterialRecord, ULong> COURSE_ID = createField("course_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");
    /**
     * The column <code>brainshare_dev.material.section_id</code>.
     */
    public final TableField<RMaterialRecord, UInteger> SECTION_ID = createField("section_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.tags_separated_by_comma</code>.
     */
    public final TableField<RMaterialRecord, String> TAGS_SEPARATED_BY_COMMA = createField("tags_separated_by_comma", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.preview_content_data_json</code>.
     */
    public final TableField<RMaterialRecord, Object> PREVIEW_CONTENT_DATA_JSON = createField("preview_content_data_json", org.jooq.impl.DefaultDataType.getDefaultDataType("json"), this, "");
    /**
     * The column <code>brainshare_dev.material.content_data_id</code>.
     */
    public final TableField<RMaterialRecord, ULong> CONTENT_DATA_ID = createField("content_data_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.material.view_count</code>.
     */
    public final TableField<RMaterialRecord, UInteger> VIEW_COUNT = createField("view_count", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>brainshare_dev.material</code> table reference
     */
    public TMaterial() {
        this("material", null);
    }

    /**
     * Create an aliased <code>brainshare_dev.material</code> table reference
     */
    public TMaterial(String alias) {
        this(alias, MATERIAL);
    }

    private TMaterial(String alias, Table<RMaterialRecord> aliased) {
        this(alias, aliased, null);
    }

    private TMaterial(String alias, Table<RMaterialRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RMaterialRecord> getRecordType() {
        return RMaterialRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BrainshareDev.BRAINSHARE_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RMaterialRecord, ULong> getIdentity() {
        return Keys.IDENTITY_MATERIAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RMaterialRecord> getPrimaryKey() {
        return Keys.KEY_MATERIAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RMaterialRecord>> getKeys() {
        return Arrays.<UniqueKey<RMaterialRecord>>asList(Keys.KEY_MATERIAL_PRIMARY, Keys.KEY_MATERIAL_CONTENT_DATA_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RMaterialRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RMaterialRecord, ?>>asList(Keys.FK_MATERIAL_AUTHOR_USER_ID, Keys.FK_MATERIAL_STATE_ID, Keys.FK_MATERIAL_FORMAT_ID, Keys.FK_MATERIAL_POSSIBLE_COURSE_ID, Keys.FK_MATERIAL_MATERIAL_SECTION_ID, Keys.FK_MATERIAL_MATERIAL_CONTENT_DATA_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TMaterial as(String alias) {
        return new TMaterial(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TMaterial rename(String name) {
        return new TMaterial(name, null);
    }
}
