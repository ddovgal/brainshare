/*
 * This file is generated by jOOQ.
*/
package ua.ddovgal.brainshareApi.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import ua.ddovgal.brainshareApi.jooq.tables.TContentData;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RContentDataRecord extends UpdatableRecordImpl<RContentDataRecord> implements Record2<ULong, Object> {

    private static final long serialVersionUID = 1732925383;

    /**
     * Create a detached RContentDataRecord
     */
    public RContentDataRecord() {
        super(TContentData.CONTENT_DATA);
    }

    /**
     * Create a detached, initialised RContentDataRecord
     */
    public RContentDataRecord(ULong id, Object dataJson) {
        super(TContentData.CONTENT_DATA);

        set(0, id);
        set(1, dataJson);
    }

    /**
     * Getter for <code>brainshare_dev.content_data.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>brainshare_dev.content_data.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>brainshare_dev.content_data.data_json</code>.
     */
    public Object getDataJson() {
        return (Object) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>brainshare_dev.content_data.data_json</code>.
     */
    public void setDataJson(Object value) {
        set(1, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<ULong, Object> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<ULong, Object> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return TContentData.CONTENT_DATA.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field2() {
        return TContentData.CONTENT_DATA.DATA_JSON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value2() {
        return getDataJson();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RContentDataRecord value1(ULong value) {
        setId(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public RContentDataRecord value2(Object value) {
        setDataJson(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RContentDataRecord values(ULong value1, Object value2) {
        value1(value1);
        value2(value2);
        return this;
    }
}
