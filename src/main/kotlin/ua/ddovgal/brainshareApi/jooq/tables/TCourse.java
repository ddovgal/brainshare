/*
 * This file is generated by jOOQ.
*/
package ua.ddovgal.brainshareApi.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;
import org.jooq.types.UShort;
import ua.ddovgal.brainshareApi.jooq.BrainshareDev;
import ua.ddovgal.brainshareApi.jooq.Keys;
import ua.ddovgal.brainshareApi.jooq.tables.records.RCourseRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TCourse extends TableImpl<RCourseRecord> {

    /**
     * The reference instance of <code>brainshare_dev.course</code>
     */
    public static final TCourse COURSE = new TCourse();
    private static final long serialVersionUID = -608580530;
    /**
     * The column <code>brainshare_dev.course.id</code>.
     */
    public final TableField<RCourseRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.course.name</code>.
     */
    public final TableField<RCourseRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.course.creator_user_id</code>.
     */
    public final TableField<RCourseRecord, ULong> CREATOR_USER_ID = createField("creator_user_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");
    /**
     * The column <code>brainshare_dev.course.materials_inside_count</code>.
     */
    public final TableField<RCourseRecord, UShort> MATERIALS_INSIDE_COUNT = createField("materials_inside_count", org.jooq.impl.SQLDataType.SMALLINTUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.course.description</code>.
     */
    public final TableField<RCourseRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");
    /**
     * The column <code>brainshare_dev.course.section_id</code>.
     */
    public final TableField<RCourseRecord, UInteger> SECTION_ID = createField("section_id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>brainshare_dev.course</code> table reference
     */
    public TCourse() {
        this("course", null);
    }

    /**
     * Create an aliased <code>brainshare_dev.course</code> table reference
     */
    public TCourse(String alias) {
        this(alias, COURSE);
    }

    private TCourse(String alias, Table<RCourseRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCourse(String alias, Table<RCourseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RCourseRecord> getRecordType() {
        return RCourseRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BrainshareDev.BRAINSHARE_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RCourseRecord, ULong> getIdentity() {
        return Keys.IDENTITY_COURSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RCourseRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RCourseRecord>> getKeys() {
        return Arrays.<UniqueKey<RCourseRecord>>asList(Keys.KEY_COURSE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RCourseRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RCourseRecord, ?>>asList(Keys.FK_COURSE_CREATOR_USER_ID, Keys.FK_COURSE_SECTION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCourse as(String alias) {
        return new TCourse(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCourse rename(String name) {
        return new TCourse(name, null);
    }
}
