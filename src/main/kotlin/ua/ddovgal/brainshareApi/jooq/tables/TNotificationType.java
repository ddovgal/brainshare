/*
 * This file is generated by jOOQ.
*/
package ua.ddovgal.brainshareApi.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import ua.ddovgal.brainshareApi.jooq.BrainshareDev;
import ua.ddovgal.brainshareApi.jooq.Keys;
import ua.ddovgal.brainshareApi.jooq.tables.records.RNotificationTypeRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TNotificationType extends TableImpl<RNotificationTypeRecord> {

    /**
     * The reference instance of <code>brainshare_dev.notification_type</code>
     */
    public static final TNotificationType NOTIFICATION_TYPE = new TNotificationType();
    private static final long serialVersionUID = 786262644;
    /**
     * The column <code>brainshare_dev.notification_type.id</code>.
     */
    public final TableField<RNotificationTypeRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.notification_type.type_name</code>.
     */
    public final TableField<RNotificationTypeRecord, String> TYPE_NAME = createField("type_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.notification_type.description</code>.
     */
    public final TableField<RNotificationTypeRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>brainshare_dev.notification_type</code> table reference
     */
    public TNotificationType() {
        this("notification_type", null);
    }

    /**
     * Create an aliased <code>brainshare_dev.notification_type</code> table reference
     */
    public TNotificationType(String alias) {
        this(alias, NOTIFICATION_TYPE);
    }

    private TNotificationType(String alias, Table<RNotificationTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TNotificationType(String alias, Table<RNotificationTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RNotificationTypeRecord> getRecordType() {
        return RNotificationTypeRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BrainshareDev.BRAINSHARE_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RNotificationTypeRecord> getPrimaryKey() {
        return Keys.KEY_NOTIFICATION_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RNotificationTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<RNotificationTypeRecord>>asList(Keys.KEY_NOTIFICATION_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TNotificationType as(String alias) {
        return new TNotificationType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TNotificationType rename(String name) {
        return new TNotificationType(name, null);
    }
}
