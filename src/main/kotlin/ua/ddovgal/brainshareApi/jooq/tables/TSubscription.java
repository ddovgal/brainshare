/*
 * This file is generated by jOOQ.
*/
package ua.ddovgal.brainshareApi.jooq.tables;


import org.jooq.*;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import ua.ddovgal.brainshareApi.jooq.BrainshareDev;
import ua.ddovgal.brainshareApi.jooq.Keys;
import ua.ddovgal.brainshareApi.jooq.tables.records.RSubscriptionRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TSubscription extends TableImpl<RSubscriptionRecord> {

    /**
     * The reference instance of <code>brainshare_dev.subscription</code>
     */
    public static final TSubscription SUBSCRIPTION = new TSubscription();
    private static final long serialVersionUID = 454317949;
    /**
     * The column <code>brainshare_dev.subscription.subscriber_id</code>.
     */
    public final TableField<RSubscriptionRecord, ULong> SUBSCRIBER_ID = createField("subscriber_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>brainshare_dev.subscription.authority_id</code>.
     */
    public final TableField<RSubscriptionRecord, ULong> AUTHORITY_ID = createField("authority_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * Create a <code>brainshare_dev.subscription</code> table reference
     */
    public TSubscription() {
        this("subscription", null);
    }

    /**
     * Create an aliased <code>brainshare_dev.subscription</code> table reference
     */
    public TSubscription(String alias) {
        this(alias, SUBSCRIPTION);
    }

    private TSubscription(String alias, Table<RSubscriptionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TSubscription(String alias, Table<RSubscriptionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RSubscriptionRecord> getRecordType() {
        return RSubscriptionRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return BrainshareDev.BRAINSHARE_DEV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RSubscriptionRecord>> getKeys() {
        return Arrays.<UniqueKey<RSubscriptionRecord>>asList(Keys.KEY_SUBSCRIPTION_ALL_COLUMN_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RSubscriptionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RSubscriptionRecord, ?>>asList(Keys.FK_SUBSCRIPTION_SUBSCRIBER_ID, Keys.FK_SUBSCRIPTION_AUTHORITY_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSubscription as(String alias) {
        return new TSubscription(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TSubscription rename(String name) {
        return new TSubscription(name, null);
    }
}
